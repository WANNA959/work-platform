<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.godx.cloud.dao.TestDao">

    <resultMap type="com.godx.cloud.entity.Test" id="TestMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="type" column="type" jdbcType="INTEGER"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="activationCode" column="activation_code" jdbcType="VARCHAR"/>
        <result property="headerUrl" column="header_url" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="resetCode" column="reset_code" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="TestMap">
        select id,
               username,
               password,
               salt,
               email,
               type,
               status,
               activation_code,
               header_url,
               create_time,
               update_time,
               reset_code
        from work_platform.test
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="TestMap">
        select id,
               username,
               password,
               salt,
               email,
               type,
               status,
               activation_code,
               header_url,
               create_time,
               update_time,
               reset_code
        from work_platform.test limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="TestMap">
        select
        id, username, password, salt, email, type, status, activation_code, header_url, create_time, update_time,
        reset_code
        from work_platform.test
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="type != null">
                and type = #{type}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="activationCode != null and activationCode != ''">
                and activation_code = #{activationCode}
            </if>
            <if test="headerUrl != null and headerUrl != ''">
                and header_url = #{headerUrl}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
            <if test="resetCode != null and resetCode != ''">
                and reset_code = #{resetCode}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into work_platform.test(username, password, salt, email, type, status, activation_code, header_url,
                                       create_time, update_time, reset_code)
        values (#{username}, #{password}, #{salt}, #{email}, #{type}, #{status}, #{activationCode}, #{headerUrl},
                #{createTime}, #{updateTime}, #{resetCode})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into work_platform.test(username, password, salt, email, type, status, activation_code, header_url,
        create_time, update_time, reset_code)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.salt}, #{entity.email}, #{entity.type}, #{entity.status},
            #{entity.activationCode}, #{entity.headerUrl}, #{entity.createTime}, #{entity.updateTime},
            #{entity.resetCode})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into work_platform.test(username, password, salt, email, type, status, activation_code, header_url,
        create_time, update_time, reset_code)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.salt}, #{entity.email}, #{entity.type}, #{entity.status},
            #{entity.activationCode}, #{entity.headerUrl}, #{entity.createTime}, #{entity.updateTime},
            #{entity.resetCode})
        </foreach>
        on duplicate key update
        username = values(username) , password = values(password) , salt = values(salt) , email = values(email) , type =
        values(type) , status = values(status) , activation_code = values(activation_code) , header_url =
        values(header_url) , create_time = values(create_time) , update_time = values(update_time) , reset_code =
        values(reset_code)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update work_platform.test
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="activationCode != null and activationCode != ''">
                activation_code = #{activationCode},
            </if>
            <if test="headerUrl != null and headerUrl != ''">
                header_url = #{headerUrl},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
            <if test="resetCode != null and resetCode != ''">
                reset_code = #{resetCode},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from work_platform.test
        where id = #{id}
    </delete>

</mapper>

